% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/boot.matrix.R
\name{boot.matrix}
\alias{boot.matrix}
\title{Bootstraps an rarefies ordinated data.}
\usage{
boot.matrix(data, bootstraps = 1000, rarefaction = FALSE, dimensions, verbose = FALSE, boot.type = "full", parallel)
}
\arguments{
\item{data}{An ordinated matrix of maximal dimensions \eqn{k*(k-1)} or a list of matrices (typically output from \link{time.series} or \link{cust.series}).}

\item{bootstraps}{The number of bootstrap pseudo-replicates (\code{default = 1000}).}

\item{rarefaction}{Either a \code{logical} value whether to fully rarefy the data or a set of \code{numeric} values to rarefy the data (see details).}

\item{dimensions}{Optional, a \code{numeric} value or proportion of the dimensions to keep.}

\item{verbose}{A \code{logical} value indicating whether to be verbose or not.}

\item{boot.type}{The bootstrap algorithm to use (\code{default = "full"}; see details).}

\item{parallel}{An optional vector containing the number of parallel threads and the virtual connection process type to run the function in parallel (requires \code{snow} package; see \code{\link[snow]{makeCluster}} function).}
}
\value{
This function outputs a \code{dispRity} object containing:
\item{data}{A \code{list} of the observed and bootstrapped matrices.}
\item{elements}{A \code{vector} containing all the names of the elements from the original matrix.}
\item{series}{A \code{vector} containing the name of the series (is \code{"1"} if the input was a single \code{matrix}).}
\item{call}{A \code{vector} containing the arguments used for the bootstrapping.}
\code{dispRity} objects can be summarised using \code{print} (S3).
}
\description{
Bootstraps and rarefies either a single ordinated matrix or a list of ordinated matrices.
}
\details{
\code{rarefaction}: when the input is \code{numeric}, the number of elements is set to the value(s) for each bootstrap. If some series have less elements than the rarefaction value, the series is not rarefied!
\code{boot.type}: the different bootstrap algorithms are:
\itemize{
  \item \code{"full"}: re-samples all the rows of the matrix and replaces them with a new random sample of rows (with \code{replace = TRUE}, meaning all the elements can be duplicated in each bootstrap).
  \item \code{"single"}: re-samples only one row of the matrix and replaces it with a new randomly sampled row (with \code{replace = FALSE}, meaning that only one elements can be duplicated in each bootstrap).
}
}
\examples{
## Load the Beck & Lee 2014 matrix
data(BeckLee_mat50)

## Bootstrapping a matrix
## Bootstrapping an ordinated matrix 20 times
boot.matrix(BeckLee_mat50, bootstraps = 20)
## Bootstrapping an ordinated matrix with rarefaction
boot.matrix(BeckLee_mat50, bootstraps = 20, rarefaction = TRUE)
## Bootstrapping an ordinated matrix with only 7,10 and 11 elements sampled
boot.matrix(BeckLee_mat50, bootstraps = 20, rarefaction = c(7, 10, 11))
## Bootstrapping an ordinated matrix with only 90\% of the first axis
boot.matrix(BeckLee_mat50, bootstraps = 20, rm.last.axis = 0.9)

## Bootstrapping a series of matrices
## Generating a dummy series of matrices
ordinated_matrix <- matrix(data = rnorm(90), nrow = 10, ncol = 9,
     dimnames = list(letters[1:10]))
factors <- as.data.frame(matrix(data = c(rep(1,5), rep(2,5)), nrow = 10,
     ncol = 1, dimnames = list(letters[1:10])))
matrix.list <- cust.series(ordinated_matrix, factors)
## Bootstrapping the series of matrices 20 times (each)
boot.matrix(matrix.list, bootstraps = 20)

\dontrun{
## Bootstrapping a series of matrices using a single thread
system.time(boot.matrix(matrix.list, bootstraps = 10000, rarefaction = TRUE))
## Bootstrapping a series of matrices using 4 threads
system.time(boot.matrix(matrix.list, bootstraps = 1000, rarefaction = TRUE,
     parallel = c(4, "SOCK")))
## System time is three times shorter with parallel but elapsed is > 2 times
## longer.
}

}
\author{
Thomas Guillerme
}
\seealso{
\code{\link{cust.series}}, \code{\link{time.series}}, \code{\link{dispRity}}.
}

