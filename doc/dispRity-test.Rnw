\documentclass{article}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{url}
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\hypersetup{
 pdfstartview={XYZ null null 1}}

\newcommand{\dispRity}{\texttt{dispRity} }
\newcommand{\R}{\texttt{R} }

\begin{document}
<<setup, include=FALSE, cache=FALSE>>=
library(knitr)
# set global chunk options
opts_chunk$set(fig.path='figure/minimal-', fig.align='center', fig.show='hold')
options(formatR.arrow=TRUE,width=90)
@


\title{Testing differences in \texttt{dispRity}}


\author{Thomas Guillerme}

\maketitle

This vignette details how to apply statistical test to \dispRity objects in the \dispRity package (v.\Sexpr{packageVersion("dispRity")}).

The \dispRity package allows to easily apply some statistical (or non statistical!) tests to the bootstrapped disparity calculations.
This is done in a modulable way, quite similar to the way disparity metrics are implemented in this package (see \href{https://github.com/TGuillerme/dispRity}{the vignette about dispRity metrics}).

\section{\texttt{test.dispRity}}

The \texttt{test.dispRity} function allows to apply a user defined test to the disparity scores of the \dispRity object.

\subsection{A level 1 function}
A level 1 function for example, will decompose the \texttt{matrix} (or a \texttt{vector} output from a level 2 function, see below) into a single value:

<<level 1 example>>=
## First, let's create a dummy matrix
dummy_matrix <- matrix(rnorm(12), 4, 3)
## Any summary metric such as mean or median are good examples of level 1
## functions as they reduce the matrix to a single dimensions (value):
mean(dummy_matrix)
median(dummy_matrix)
@ 

\subsection{A level 2 function}
A level 2 function for example, will decompose the \texttt{matrix} into a \texttt{vector}.
Several level 2 functions are implemented in \dispRity (see \texttt{?dispRity.metric}) such as the \texttt{variances} function that calculates the variance of each column of the ordinated matrix (or axis/dimensions):

<<level 2 example>>=
## We can define a different function that outputs the products of the rows:
rows <- function(matrix) apply(matrix, 1, prod)
## Rows is a level 2 function as well (outputs a vector of 4 values):
rows(dummy_matrix)
@ 

\subsection{A level 3 function}
Finally a level 3 function will transform the \texttt{matrix} into another \texttt{matrix}.
Note that the dimension of the output \texttt{matrix} don't need to match the the input \texttt{matrix}:

<<level 3 example>>=
## The var functions computes the variance/covariance matrix which will be a
## three by three matrix
var(dummy_matrix)
@ 

\section{\texttt{make.metric}}
Of course, functions can be more complex and involve multiple operations such as the \texttt{centroids} function (see \texttt{?dispRity.metric}) that calculates the euclidean distance between each elements and the ordinated space centroid.
The \texttt{make.metric} function implemented in \dispRity is designed to help testing and finding the level of the functions.
Concretely, This function tests:
\begin{enumerate}
  \item if your function can deal with a matrix as an \texttt{input}.
  \item which level is your function (level 1, 2 or 3, see \texttt{?dispRity.metric}).
  \item whether the function can properly be implemented in the \texttt{dispRity} function.
\end{enumerate}
For example, let's see if the functions described above are the right levels:

<<make.metric example>>=
## First we need to load the package
library(dispRity)
## Which level is the mean function? And is able to be used in the dispRity function?
make.metric(mean)
## Which level is the rows function? And is able to be used in the dispRity function?
make.metric(rows)
## Note that the function also tells us that we will need a level 1 function as well.
## We'll cover this below.
## Which level is the var function? And is able to be used in the dispRity function?
make.metric(var)
@ 

\section{metric argument in \dispRity}
Using this metric structure, on can easily use any disparity metric in the \dispRity function as follows:

<<dispRity example>>=
## First we need to load the data
data(BeckLee_mat50)
## Measuring disparity as the standard deviation of all the value of the ordinated
## matrix (level 1 function).
summary(dispRity(BeckLee_mat50, metric = sd))
## Measuring disparity as the standard deviation of the variance of each axis of
## the ordinated matrix (level 1 and level 2 functions).
summary(dispRity(BeckLee_mat50, metric = c(sd, variances)))
## Measuring disparity as the standard deviation of the variance of each axis of
## the variance covariance matrix (level 1, level 2 and level 3 functions).
summary(dispRity(BeckLee_mat50, metric = c(sd, variances, var)), round=10)
## Note that the order of each function in the metric argument does not matter,
## the algorithm always classifies them by levels and computes first level 3,
## then level 2 and finally level 1.
summary(dispRity(BeckLee_mat50, metric = c(variances, sd, var)), round=10)
## Both ways output the same disparity values.
@ 

\bibliographystyle{vancouver}
\bibliography{References}

\end{document}